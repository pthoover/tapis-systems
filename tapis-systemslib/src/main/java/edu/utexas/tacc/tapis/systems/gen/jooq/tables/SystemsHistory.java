/*
 * This file is generated by jOOQ.
 */
package edu.utexas.tacc.tapis.systems.gen.jooq.tables;


import com.google.gson.JsonElement;

import edu.utexas.tacc.tapis.systems.dao.JSONBToJsonElementBinding;
import edu.utexas.tacc.tapis.systems.gen.jooq.Keys;
import edu.utexas.tacc.tapis.systems.gen.jooq.TapisSys;
import edu.utexas.tacc.tapis.systems.gen.jooq.tables.records.SystemsHistoryRecord;
import edu.utexas.tacc.tapis.systems.model.TSystem.SystemOperation;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row12;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.EnumConverter;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SystemsHistory extends TableImpl<SystemsHistoryRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>tapis_sys.systems_history</code>
     */
    public static final SystemsHistory SYSTEMS_HISTORY = new SystemsHistory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SystemsHistoryRecord> getRecordType() {
        return SystemsHistoryRecord.class;
    }

    /**
     * The column <code>tapis_sys.systems_history.seq_id</code>. System update request sequence id
     */
    public final TableField<SystemsHistoryRecord, Integer> SEQ_ID = createField(DSL.name("seq_id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "System update request sequence id");

    /**
     * The column <code>tapis_sys.systems_history.system_seq_id</code>. Sequence id of system being updated
     */
    public final TableField<SystemsHistoryRecord, Integer> SYSTEM_SEQ_ID = createField(DSL.name("system_seq_id"), SQLDataType.INTEGER, this, "Sequence id of system being updated");

    /**
     * The column <code>tapis_sys.systems_history.obo_tenant</code>. OBO Tenant associated with the change request
     */
    public final TableField<SystemsHistoryRecord, String> OBO_TENANT = createField(DSL.name("obo_tenant"), SQLDataType.CLOB.nullable(false), this, "OBO Tenant associated with the change request");

    /**
     * The column <code>tapis_sys.systems_history.obo_user</code>. OBO User associated with the change request
     */
    public final TableField<SystemsHistoryRecord, String> OBO_USER = createField(DSL.name("obo_user"), SQLDataType.CLOB.nullable(false), this, "OBO User associated with the change request");

    /**
     * The column <code>tapis_sys.systems_history.api_tenant</code>. Tenant of user who requested the update
     */
    public final TableField<SystemsHistoryRecord, String> API_TENANT = createField(DSL.name("api_tenant"), SQLDataType.CLOB.nullable(false), this, "Tenant of user who requested the update");

    /**
     * The column <code>tapis_sys.systems_history.api_user</code>. Name of user who requested the update
     */
    public final TableField<SystemsHistoryRecord, String> API_USER = createField(DSL.name("api_user"), SQLDataType.CLOB.nullable(false), this, "Name of user who requested the update");

    /**
     * The column <code>tapis_sys.systems_history.system_id</code>. Id of system being updated
     */
    public final TableField<SystemsHistoryRecord, String> SYSTEM_ID = createField(DSL.name("system_id"), SQLDataType.CLOB.nullable(false), this, "Id of system being updated");

    /**
     * The column <code>tapis_sys.systems_history.operation</code>. Type of update operation
     */
    public final TableField<SystemsHistoryRecord, SystemOperation> OPERATION = createField(DSL.name("operation"), SQLDataType.CLOB.nullable(false), this, "Type of update operation", new EnumConverter<String, SystemOperation>(String.class, SystemOperation.class));

    /**
     * The column <code>tapis_sys.systems_history.description</code>. JSON describing the change. Secrets scrubbed as needed.
     */
    public final TableField<SystemsHistoryRecord, JsonElement> DESCRIPTION = createField(DSL.name("description"), SQLDataType.JSONB.nullable(false), this, "JSON describing the change. Secrets scrubbed as needed.", new JSONBToJsonElementBinding());

    /**
     * The column <code>tapis_sys.systems_history.raw_data</code>. Raw data associated with the request, if available. Secrets scrubbed as needed.
     */
    public final TableField<SystemsHistoryRecord, String> RAW_DATA = createField(DSL.name("raw_data"), SQLDataType.CLOB, this, "Raw data associated with the request, if available. Secrets scrubbed as needed.");

    /**
     * The column <code>tapis_sys.systems_history.uuid</code>. UUID of system being updated
     */
    public final TableField<SystemsHistoryRecord, java.util.UUID> UUID = createField(DSL.name("uuid"), SQLDataType.UUID.nullable(false), this, "UUID of system being updated");

    /**
     * The column <code>tapis_sys.systems_history.created</code>. UTC time for when record was created
     */
    public final TableField<SystemsHistoryRecord, LocalDateTime> CREATED = createField(DSL.name("created"), SQLDataType.LOCALDATETIME(6).nullable(false).defaultValue(DSL.field("timezone('utc'::text, now())", SQLDataType.LOCALDATETIME)), this, "UTC time for when record was created");

    private SystemsHistory(Name alias, Table<SystemsHistoryRecord> aliased) {
        this(alias, aliased, null);
    }

    private SystemsHistory(Name alias, Table<SystemsHistoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>tapis_sys.systems_history</code> table reference
     */
    public SystemsHistory(String alias) {
        this(DSL.name(alias), SYSTEMS_HISTORY);
    }

    /**
     * Create an aliased <code>tapis_sys.systems_history</code> table reference
     */
    public SystemsHistory(Name alias) {
        this(alias, SYSTEMS_HISTORY);
    }

    /**
     * Create a <code>tapis_sys.systems_history</code> table reference
     */
    public SystemsHistory() {
        this(DSL.name("systems_history"), null);
    }

    public <O extends Record> SystemsHistory(Table<O> child, ForeignKey<O, SystemsHistoryRecord> key) {
        super(child, key, SYSTEMS_HISTORY);
    }

    @Override
    public Schema getSchema() {
        return TapisSys.TAPIS_SYS;
    }

    @Override
    public Identity<SystemsHistoryRecord, Integer> getIdentity() {
        return (Identity<SystemsHistoryRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<SystemsHistoryRecord> getPrimaryKey() {
        return Keys.SYSTEMS_HISTORY_PKEY;
    }

    @Override
    public List<UniqueKey<SystemsHistoryRecord>> getKeys() {
        return Arrays.<UniqueKey<SystemsHistoryRecord>>asList(Keys.SYSTEMS_HISTORY_PKEY);
    }

    @Override
    public List<ForeignKey<SystemsHistoryRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<SystemsHistoryRecord, ?>>asList(Keys.SYSTEMS_HISTORY__SYSTEMS_HISTORY_SYSTEM_SEQ_ID_FKEY);
    }

    private transient Systems _systems;

    public Systems systems() {
        if (_systems == null)
            _systems = new Systems(this, Keys.SYSTEMS_HISTORY__SYSTEMS_HISTORY_SYSTEM_SEQ_ID_FKEY);

        return _systems;
    }

    @Override
    public SystemsHistory as(String alias) {
        return new SystemsHistory(DSL.name(alias), this);
    }

    @Override
    public SystemsHistory as(Name alias) {
        return new SystemsHistory(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SystemsHistory rename(String name) {
        return new SystemsHistory(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SystemsHistory rename(Name name) {
        return new SystemsHistory(name, null);
    }

    // -------------------------------------------------------------------------
    // Row12 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row12<Integer, Integer, String, String, String, String, String, SystemOperation, JsonElement, String, java.util.UUID, LocalDateTime> fieldsRow() {
        return (Row12) super.fieldsRow();
    }
}
